/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventoryandsalessystem;

import java.sql.SQLException;

/**
 *
 * @author thasi
 */
import java.sql.SQLException;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class OrderStatus extends javax.swing.JFrame {
 private DBConnect dbc;
    private ResultSet rs=null;
    private Connection con;
    /**
     * Creates new form OrderStatus
     */
    public OrderStatus() {
        initComponents();
        fill_combo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        cmb_order = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dt_chose = new com.toedter.calendar.JDateChooser();
        state = new javax.swing.JComboBox<>();
        pn = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Order No:");

        save.setBackground(new java.awt.Color(255, 255, 255));
        save.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cmb_order.setEditable(true);
        cmb_order.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmb_order.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<no selected item>" }));
        cmb_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_orderActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Order Status:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Order Date:");

        dt_chose.setDateFormatString("yyyy-MM-dd");

        state.setEditable(true);
        state.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        state.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Received" }));
        state.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cmb_order, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(dt_chose, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(121, 121, 121))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmb_order, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dt_chose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
         try{    
    dbc=new DBConnect();
     try{
        dbc.connectToDB();
        
    }
      catch(ClassNotFoundException e) { }
     
        String code=cmb_order.getSelectedItem().toString();
     String sql="select * FROM purchase_order where order_no='"+code+"' ";
     rs=dbc.getDatafromDB(sql);
     String id,st = null,cd = null,qt = null,up=null;
     
     
     while(rs.next())
     {
         id=rs.getString("order_no");
         st=rs.getString("status");
         cd=rs.getString("product_code");
         qt=rs.getString("qnt");
         
         
         System.out.println(st);
           System.out.println(qt);
     }
    // System.out.println(rs.getString("status"));
     System.out.println("selectedddddd");
     String db_code,cat,name,db_name,db_price,s_price,p_price;
     String m= state.getSelectedItem().toString();
     
     String msg="Received";
     String sql2="update purchase_order set status='"+m+"'where order_no='"+code+"'";
     
     dbc.insertDataToDB(sql2);
     System.out.println("updated");
     System.out.println(m);
     if(m.equals("Received")&& st.equals("Pending"))
     {
         System.out.println(cd);
         
         
         String sql1="select * from inventory_list ";
         rs=dbc.getDatafromDB(sql1);
         
         String order_n,qnt = null,pid;
         
         while(rs.next())
         {
             //order_n=rs.getString("order_no");
             qnt=rs.getString("quantity");
             pid=rs.getString("product_code");
             up=rs.getString("unit_price");
             //qt=rs.getString("qnt");
             System.out.println("qt");
             System.out.println(qnt);
             if(pid.equals(cd))
                 break;
             
             
             
           
         }
         if(qnt==null)
         {
           qnt=qt; 
           System.out.println(qnt);
         }
         else
         {
         int q=Integer.parseInt(qnt);
         int t=Integer.parseInt(qt);
         int r=q+t;
         qnt=Integer.toString(r);
         System.out.println(qnt);
         }
         double d=Double.parseDouble(up);
         int in=Integer.parseInt(qnt);
         double in_v=d*in;
         System.out.println(in_v);
         
         
         
      String s= "update inventory_list set quantity='"+qnt+"',inven_value='"+Double.toString(in_v)+"' where product_code='"+cd+"'"; 
      dbc.insertDataToDB(s);
     }
     
     closeDB();
    }
    
    catch(SQLException e){ }
    }//GEN-LAST:event_saveActionPerformed

    private void cmb_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_orderActionPerformed
        try{    
    dbc=new DBConnect();
     try{
        dbc.connectToDB();
        
    }
      catch(ClassNotFoundException e) { }
     
        String code=cmb_order.getSelectedItem().toString();
     String sql="select * FROM purchase_order natural join product_entry";
     rs=dbc.getDatafromDB(sql);
     System.out.println(rs);
     String db_code,cat,name,db_name,dt,s_price,p_price;
     while(rs.next())
     {
         db_code=rs.getString("order_no");
         db_name=rs.getString("status");
         name=rs.getString("p_name");
         dt=rs.getString("order_date");
         Date date = null;
        try {
            if(dt!=null)
            date = new SimpleDateFormat("yyyy-MM-dd").parse(dt);
        } catch (ParseException ex) {
            Logger.getLogger(OrderStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
         if(code.equals(db_code))
         {
             state.setSelectedItem(db_name);
             pn.setText(name);
             dt_chose.setDate(date);
             
             break;
         }
     }
     closeDB();
    }
    
    catch(SQLException e){ }
    }//GEN-LAST:event_cmb_orderActionPerformed

    private void stateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stateActionPerformed

    private void fill_combo()
    {
         try{    
    dbc=new DBConnect();
     try{
        dbc.connectToDB();
        
    }
      catch(ClassNotFoundException e) { }
     
     String s1="Select order_no from purchase_order";
     rs=dbc.getDatafromDB(s1);
     while(rs.next())
     {
         cmb_order.addItem(rs.getString("order_no"));
     }
     cmb_order.setSelectedItem("");
     
     
                 
       
     closeDB();
    }
    
    catch(SQLException e){ }
    
    }
    
     private void closeDB(){
        try{
            dbc.disconnectFromDB();
        }catch(Exception e){}
        }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderStatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_order;
    private com.toedter.calendar.JDateChooser dt_chose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField pn;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> state;
    // End of variables declaration//GEN-END:variables
}
